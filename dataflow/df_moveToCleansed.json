{
	"name": "df_moveToCleansed",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "lrbf_parquettransf",
						"type": "DatasetReference"
					},
					"name": "transfParquet"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "lrbf_DataLake_Storage_Account",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Company as string,",
				"          UUID as string,",
				"          CFDIUse as string,",
				"          Version as string,",
				"          VoucherType as string,",
				"          SealingDate as date,",
				"          Status as string,",
				"          ZipCode as string,",
				"          State as string,",
				"          City as string,",
				"          BankAccountOrigin as decimal(10,0),",
				"          BankAccountDestination as decimal(10,0),",
				"          ExchangeRate as decimal(10,0),",
				"          ExchangeRateDof as decimal(10,0),",
				"          TotalNotBrokenDownTaxAmount as decimal(10,0),",
				"          TotalAmount as decimal(10,0),",
				"          SubTotalAmount as decimal(10,0),",
				"          Discount as decimal(10,0),",
				"          PaymentMethod as string,",
				"          PaymentForm as string,",
				"          BankCheckNumber as string,",
				"          TotalRetentionTaxes as decimal(10,0),",
				"          TotalTranferTaxes as decimal(10,0),",
				"          LocalTotalRetentionTaxes as decimal(10,0),",
				"          LocalTotalTranferTaxes as string,",
				"          ReceptorFiscalAddress as string,",
				"          TaxRegimen as string,",
				"          RFC as string,",
				"          Name as string,",
				"          PartitionDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> transfParquet",
				"transfParquet sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'cleansed',",
				"     folderPath: 'synapse/workspaces/contpaqui1/warehouse/DocAdministrativo',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: true,",
				"     updateable: false,",
				"     upsertable: false,",
				"     umask: 0066,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}